{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,uCCsEO,SAASC,EAA4BC,EAAeC,GACzD,IAAIC,EAASF,EAAcG,cAAc,gCACrCF,IACFC,EAAOE,MAAMC,MAAQ,qB,CD1DzBC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAcF,SAASG,iBAAiB,wBAE5C,EAAAC,EAAAC,4BACA,EAAAC,EAAAC,yBAEAP,SAASG,iBAAiB,kBAAkBK,SAAQ,SAAUC,IAC5D,EAAAC,EAAAC,oBAAmBF,IACnB,EAAAL,EAAAQ,yBAAwBH,EAAQI,WAAYJ,EAAQK,M,IAGtDZ,EAAYM,SAAQ,SAAUO,GAC5BA,EAAWd,iBAAiB,UAAU,YACpC,EAAAV,EAAAyB,0B,OC3BJhB,SAASG,iBAAiB,uBAAuBK,SAAQ,SAAUC,GACjEA,EAAQX,MAAMmB,QAAU,OAExB,IAAIvB,EAAgBM,SAASkB,cAAc,OAC3CxB,EAAcyB,UAAUC,IAAI,qCAC5BX,EAAQI,WAAWQ,aAAa3B,EAAee,GAC/Cf,EAAc4B,YAAYb,GAE1B,IAAIb,EAASI,SAASkB,cAAc,OACpCtB,EAAOuB,UAAUC,IAAI,+BACrBxB,EAAO2B,YAAcd,EAAQZ,cAAc,UAAU0B,YACrD7B,EAAc4B,YAAY1B,GAE1B,IAAI4B,EAAaxB,SAASkB,cAAc,OACxCM,EAAWL,UAAUC,IAAI,2BACzB1B,EAAc4B,YAAYE,GAE1Bf,EAAQN,iBAAiB,UAAUK,SAAQ,SAAUiB,GACnD,IAAIC,EAAa1B,SAASkB,cAAc,OACxCQ,EAAWP,UAAUC,IAAI,2BACzBM,EAAWC,UAAY,SAAWF,EAAOF,YAAc,UACvDG,EAAWE,aAAa,aAAcH,EAAOX,OAC7CU,EAAWF,YAAYI,E,IAGzBF,EAAW1B,MAAMmB,QAAU,OAE3BrB,EAAOK,iBAAiB,SAAS,WAE/B,GADaL,EAAOuB,UAAUU,SAAS,MAiBrCjC,EAAOuB,UAAUW,OAAO,MACxBN,EAAW1B,MAAMmB,QAAU,WAjBhB,CACXrB,EAAOuB,UAAUC,IAAI,MACrBI,EAAW1B,MAAMmB,QAAU,QAE3B,IAAItB,EAAgBc,EAAQK,MAE5BU,EACGrB,iBAAiB,4BACjBK,SAAQ,SAAUuB,GACbA,EAAKC,aAAa,gBAAkBrC,EACtCoC,EAAKjC,MAAMmB,QAAU,OAErBc,EAAKjC,MAAMmB,QAAU,O,QAS/BO,EACGrB,iBAAiB,4BACjBK,SAAQ,SAAUuB,GACjBA,EAAK9B,iBAAiB,SAAS,WAC7B,IAAIgC,EAAaC,KAAKF,aAAa,cACnCvB,EAAQK,MAAQmB,EAChBrC,EAAO2B,YAAcW,KAAKrC,cAAc,QAAQ0B,YAChDC,EAAW1B,MAAMmB,QAAU,OAC3BrB,EAAOuB,UAAUW,OAAO,MAExBrC,EAA4BgB,EAAQI,WAAYoB,GAEhD,IAAIE,EAAQ,IAAIC,MAAM,UACtB3B,EAAQ4B,cAAcF,E,UD/B9BnC,SACGG,iBAAiB,gCACjBK,SAAQ,SAAUC,GACjBhB,EAA4BgB,EAAQI,WAAYJ,EAAQK,M,KAE5D,EAAAvB,EAAA+C,qB","sources":["src/js/main.js","src/js/customSelectSort.js"],"sourcesContent":["import {\n  resetCustomSelects,\n  updateFilterButtonState,\n} from './updateFilterButton';\nimport { initializeModelSelect } from './customModels';\nimport {\n  initializeCustomSelects,\n  updateCustomSelectStyle,\n} from './customSelect';\nimport { updateCustomSelect } from './updateCustomSelect';\nimport {\n  initializeCustomSelectSort,\n  updateCustomSelectStyleSort,\n} from './customSelectSort';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  let filterItems = document.querySelectorAll('.filter-item select');\n\n  initializeCustomSelects();\n  initializeModelSelect();\n\n  document.querySelectorAll('.styled-select').forEach(function (element) {\n    updateCustomSelect(element);\n    updateCustomSelectStyle(element.parentNode, element.value);\n  });\n\n  filterItems.forEach(function (filterItem) {\n    filterItem.addEventListener('change', function () {\n      updateFilterButtonState();\n    });\n  });\n\n  initializeCustomSelectSort();\n  document\n    .querySelectorAll('.offers-styled-dropdown-sort')\n    .forEach(function (element) {\n      updateCustomSelectStyleSort(element.parentNode, element.value);\n    });\n  resetCustomSelects();\n});\n","export function initializeCustomSelectSort() {\n  document.querySelectorAll('.offers-sort-select').forEach(function (element) {\n    element.style.display = 'none';\n\n    let selectWrapper = document.createElement('div');\n    selectWrapper.classList.add('offers-custom-select-wrapper-sort');\n    element.parentNode.insertBefore(selectWrapper, element);\n    selectWrapper.appendChild(element);\n\n    let select = document.createElement('div');\n    select.classList.add('offers-styled-dropdown-sort');\n    select.textContent = element.querySelector('option').textContent;\n    selectWrapper.appendChild(select);\n\n    let optionList = document.createElement('div');\n    optionList.classList.add('offers-option-list-sort');\n    selectWrapper.appendChild(optionList);\n\n    element.querySelectorAll('option').forEach(function (option) {\n      let optionItem = document.createElement('div');\n      optionItem.classList.add('offers-option-item-sort');\n      optionItem.innerHTML = '<span>' + option.textContent + '</span>';\n      optionItem.setAttribute('data-value', option.value);\n      optionList.appendChild(optionItem);\n    });\n\n    optionList.style.display = 'none';\n\n    select.addEventListener('click', function () {\n      let isOpen = select.classList.contains('on');\n      if (!isOpen) {\n        select.classList.add('on');\n        optionList.style.display = 'block';\n\n        let selectedValue = element.value;\n\n        optionList\n          .querySelectorAll('.offers-option-item-sort')\n          .forEach(function (item) {\n            if (item.getAttribute('data-value') === selectedValue) {\n              item.style.display = 'none';\n            } else {\n              item.style.display = 'block';\n            }\n          });\n      } else {\n        select.classList.remove('on');\n        optionList.style.display = 'none';\n      }\n    });\n\n    optionList\n      .querySelectorAll('.offers-option-item-sort')\n      .forEach(function (item) {\n        item.addEventListener('click', function () {\n          let chooseItem = this.getAttribute('data-value');\n          element.value = chooseItem;\n          select.textContent = this.querySelector('span').textContent;\n          optionList.style.display = 'none';\n          select.classList.remove('on');\n\n          updateCustomSelectStyleSort(element.parentNode, chooseItem);\n\n          let event = new Event('change');\n          element.dispatchEvent(event);\n        });\n      });\n  });\n}\n\nexport function updateCustomSelectStyleSort(selectWrapper, selectedValue) {\n  let select = selectWrapper.querySelector('.offers-styled-dropdown-sort');\n  if (selectedValue) {\n    select.style.color = 'var(--brand-color)';\n  }\n}\n"],"names":["$cGH6F","parcelRequire","$13ba36eeea8ad3d8$export$72671abafe78db46","selectWrapper","selectedValue","select","querySelector","style","color","document","addEventListener","filterItems","querySelectorAll","$exava","initializeCustomSelects","$dyjii","initializeModelSelect","forEach","element","$9QtZ8","updateCustomSelect","updateCustomSelectStyle","parentNode","value","filterItem","updateFilterButtonState","display","createElement","classList","add","insertBefore","appendChild","textContent","optionList","option","optionItem","innerHTML","setAttribute","contains","remove","item","getAttribute","chooseItem","this","event","Event","dispatchEvent","resetCustomSelects"],"version":3,"file":"index.914e8d3b.js.map"}